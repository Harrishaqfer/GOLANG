---
AWSTemplateFormatVersion: '2010-09-09'
Description: Elastic Container Registry
Parameters:
  BucketName:
    Type: String
    Description: The name of the S3 bucket to create (must be globally unique).
  VersioningStatus:
    Type: String
    Default: Suspended
    AllowedValues:
      - Enabled
      - Suspended
    Description: Enable or suspend versioning for the bucket.
  ExpiryPrefix:
    Type: String
    Default: test/
    Description: The prefix (folder) where objects will expire.
  ExpiryDays:
    Type: Number
    Default: 1
    Description: Number of days after which objects under the prefix should expire.

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: {"Ref": "BucketName"}
      VersioningConfiguration:
        Status: {"Ref": "VersioningStatus"}
      LifecycleConfiguration:
        Rules:
          - Id: ExpireObjectsUnderPrefix
            Prefix: {"Ref": "ExpiryPrefix"}
            Status: Enabled
            ExpirationInDays: {"Ref": "ExpiryDays"}

Outputs:
  BucketArnOutput:
    Description: ARN of the S3 bucket
    Value: {"Fn::GetAtt": ["S3Bucket","Arn"]} 
  BucketNameOutput:
    Description: Name of the S3 bucket
    Value: {"Ref": "S3Bucket"}


ResourceTemplates:
  TemplateA:
    ${repositoryLogicalName}:
      Type: AWS::ECR::Repository
      Properties:
        RepositoryName: ${repositoryName}
        LifecyclePolicy:
          LifecyclePolicyText: |
            {
              "rules": [
              {
                "rulePriority": 1,
                "description": "Keep only latest ${imageCount} images",
                "selection": {
                  "tagStatus": "any",
                  "countType": "imageCountMoreThan",
                  "countNumber": ${imageCount}
                },
                "action": { "type": "expire" }
              }]
            }

  TemplateB:
    ${repositoryLogicalName}:
      Type: AWS::ECR::Repository
      Properties:
        RepositoryName: ${repositoryName}
        LifecyclePolicy:
          LifecyclePolicyText: |   
            {
              "rules": [
              {
                "rulePriority": 1,
                "description": "Expire images older than ${expiryInDays} days",
                "selection": {
                  "tagStatus": "any",
                  "countType": "sinceImagePushed",
                  "countUnit": "days",
                  "countNumber": ${expiryInDays}
                },
                "action": { "type": "expire" }
              }]
            }   

  TemplateC:
    ${repositoryLogicalName}:
      Type: AWS::ECR::Repository
      Properties:
        RepositoryName: ${repositoryName}

  TemplateD:
    ${repositoryLogicalName}:
      Type: AWS::ECR::Repository
      Properties:
        RepositoryName: ${repositoryName}
        LifecyclePolicy:
          LifecyclePolicyText: |
            {
              "rules": [
              {
                "rulePriority": 1,
                "description": "Keep only latest ${imageCount} images",
                "selection": {
                  "tagStatus": "any",
                  "countType": "imageCountMoreThan",
                  "countNumber": ${imageCount}
                },
                "action": { "type": "expire" }
              }]
            }
        RepositoryPolicyText: |
          {
            "Version": "2008-10-17",
            "Statement": [
              {
                "Sid": "AllowPull",
                "Effect": "Allow",
                "Principal": {
                  "AWS": "${whiteListingAcc}"
                },
                "Action": [
                  "ecr:GetDownloadUrlForLayer",
                  "ecr:BatchGetImage",
                  "ecr:BatchCheckLayerAvailability"
                ]
              }
            ]
          }

  TemplateE:
    ${repositoryLogicalName}:
      Type: AWS::ECR::Repository
      Properties:
        RepositoryName: ${repositoryName}
        LifecyclePolicy:
          LifecyclePolicyText: |   
            {
              "rules": [
              {
                "rulePriority": 1,
                "description": "Expire images older than ${expiryInDays} days",
                "selection": {
                  "tagStatus": "any",
                  "countType": "sinceImagePushed",
                  "countUnit": "days",
                  "countNumber": ${expiryInDays}
                },
                "action": { "type": "expire" }
              }]
            }  
        RepositoryPolicyText: |
          {
            "Version": "2008-10-17",
            "Statement": [
              {
                "Sid": "AllowPull",
                "Effect": "Allow",
                "Principal": {
                  "AWS": "${whiteListingAcc}"
                },
                "Action": [
                  "ecr:GetDownloadUrlForLayer",
                  "ecr:BatchGetImage",
                  "ecr:BatchCheckLayerAvailability"
                ]
              }
            ]
          } 
